<!DOCTYPE html>
<html>

<head>
  <link rel="stylesheet" type="text/css" href="/styles/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ"
    crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="/styles/style.css">
</head>

<body>
  <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
  <div class="container main">
    <div class="row">
      <div id="player"></div>
    </div>

    <!-- <div id="timeline">
    </div> -->
    <div class="row mt-4">
        <div class="col-md-2 col-sm-3">
          <button type="button" class="btn btn-dark" id="playBtn">
            <i class="fas fa-play"></i>
          </button>
          <button type="button" class="btn btn-light" id="pauseBtn">
            <i class="fas fa-pause"></i>
          </button>
        </div>
        <div class="col-md-10 col-sm-9 d-flex align-items-center">
          <div class="slidecontainer">
            <input type="range" min="0" value="0" class="slider" id="myRange">
            <span id="timeline" class="pl-1"></span>
          </div>
          
        </div>
    </div>
  </div>
  </div>


  <script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    var playbtn = document.getElementById('playBtn')
    var pausebtn = document.getElementById('pauseBtn')
    // var timeleft = document.getElementById('timeleft')

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    var duration;
    var currentTime = 0;
    var slider;

    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        height: '380',
        width: '100%',
        videoId: 'cnGMG798SCI',
        playerVars: {
          'autoplay': 1,
          'controls': 0
        },
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
      });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      duration = player.getDuration()

      setSlider()
      playVideo();
      console.log({
        player
      })
    }

    function onPlayerStateChange(event) {
      console.log(event)
      if (event.data === 1) {
        // currentTime = Math.round(player.getCurrentTime() / 60 * 100 ) / 100
        // time = setInterval(() => {
        //     //update timeline
        //     console.log(currentTime)
        //     currentTime = Math.round((currentTime + 0.01) * 100 ) / 100
        //     timeleft.innerText = currentTime
        // }, 1000);
        slider = setInterval(() => {
          setSlider()
        }, 1000)
      }
    }

    function pauseVideo() {
      player.pauseVideo();
      clearInterval(slider)
    }

    function playVideo() {
      player.playVideo();
    }

    function setSlider() {
      var slider = document.getElementById("myRange");
      var output = document.getElementById("timeline");
      output.innerHTML = slider.value; // Display the default slider value

      var currentTime = player.getCurrentTime()
      var duration = player.getDuration()

      // console.log({
      //   duration
      // })
      // console.log({
      //   currentTime
      // })

      //set timeline
      slider.setAttribute('max', duration)
      // Update the current slider value (each time you drag the slider handle)
      slider.oninput = function () {
        output.innerHTML = this.value;
        player.seekTo(this.value)
      }

      slider.value = Math.abs(currentTime)

    }
    playbtn.addEventListener('click', playVideo)
    pausebtn.addEventListener('click', pauseVideo)
  </script>
</body>

</html>